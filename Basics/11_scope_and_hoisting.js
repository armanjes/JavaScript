/*
âœ… Scope and Hoisting:
ðŸš€ JavaScript has function scope, meaning variables declared inside a function are only accessible within that function.
ðŸš€ Variables declared with var are function-scoped not "block-scoped {}" and are hoisted to the top of their containing function.
ðŸš€ Variables declared with let and const are block-scoped "{}" and are not hoisted.
*/

// âœ… function scope
function name() {
    var x = 10;
    console.log(x);
}
name()
// ðŸš€ we can't access outside function
console.log(x);

// âœ… block scope
if (true){
    let y = 100
    console.log(y);
}

// âœ… nested scoping or closure
// ðŸš€ accessing properties of parent in child

function first(){
    let x = 100
    
    function second(){
        console.log(10 + x);
    }

    second()
}
first()

